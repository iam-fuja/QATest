name: MSDAT Daily Automated Test (5 AM)

on:
  schedule:
    - cron: '0 5 * * *'  # Runs at 5:00 AM WAT (4:00 AM UTC)
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1. Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up Java (with built-in Maven cache)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 3. Setup Chrome
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      # 4. (Optional) Debug: List repo files
      - name: Debug - List files
        run: ls -R

      # 5. Run tests
      - name: Run Tests
        run: mvn clean test
        env:
          BROWSER: chrome
          HEADLESS: true
          CHROME_OPTS: "--no-sandbox --disable-dev-shm-usage --disable-gpu --window-size=1920,1080"

      # 6. Print failed tests
      - name: Print Failed Tests (if any)
        if: failure()
        run: |
          echo "üîç Failed Test Methods:"
          grep -r "<<< FAILURE!" target/surefire-reports || echo "No failures found."

      # 7. Upload screenshots (if available)
      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: target/reports/*.jpg
        continue-on-error: true

      # 8. Generate test summary and write to GitHub UI
      - name: Generate Test Summary
        if: always()
        run: |
          mkdir -p reports
          PASSED=$(grep -oP 'testsuite.*?passed="\K\d+' target/surefire-reports/testng-results.xml | awk '{s+=$1} END {print s+0}')
          FAILED=$(grep -oP 'testsuite.*?failed="\K\d+' target/surefire-reports/testng-results.xml | awk '{s+=$1} END {print s+0}')
          SKIPPED=$(grep -oP 'testsuite.*?skipped="\K\d+' target/surefire-reports/testng-results.xml | awk '{s+=$1} END {print s+0}')

          echo "MSDAT Daily Test Summary" > reports/test-summary.txt
          echo "==========================" >> reports/test-summary.txt
          echo "‚úÖ Passed : $PASSED" >> reports/test-summary.txt
          echo "‚ùå Failed : $FAILED" >> reports/test-summary.txt
          echo "‚ö†Ô∏è Skipped: $SKIPPED" >> reports/test-summary.txt
          echo "‚è±Ô∏è  Time   : $(date)" >> reports/test-summary.txt

          echo "::notice ::‚úÖ Passed: $PASSED | ‚ùå Failed: $FAILED | ‚ö†Ô∏è Skipped: $SKIPPED"

      # 9. Zip all reports
      - name: Zip Reports
        if: always()
        run: |
          cp -r target/surefire-reports/* reports/ || true
          cp -r target/extent-reports/* reports/ || true
          zip -r test-reports.zip reports/

      # 10. Upload zipped reports
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: test-reports.zip

      # 11. Send report via email
      - name: Send Email
        if: always()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "MSDAT Daily Test Report - ${{ github.workflow }}"
          to: ummi.abdulsalam@e4email.net,msdat.dashboard@e4email.net,‚Å†oyenike.sola@gmail.com,daniel.oyeniyi@e4email.net
          from: MSDAT QA Bot <${{ secrets.EMAIL_USERNAME }}>
          body: |
            Hello Team,

            The MSDAT Daily Automated Test has been completed.

            ‚úÖ **Status**: ${{ job.status }}
      #      üìÖ **Date**: ${{ github.run_started_at }}
      #      üîó **View Full Logs**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      #     üß™ **Test Summary**:
      #     (See attached summary file for details.)

      #      Regards,  
      #      MSDAT Quality Assurance Engineer
      #    attachments: test-reports.zip
          secure: true

      # 12. Upload to Google Drive
      # - name: Upload to Google Drive
      #   if: always()
      #   uses: satackey/action-google-drive@v1.1.1
      #   with:
      #     file: test-reports.zip
      #     folder-id: ${{ secrets.GDRIVE_FOLDER_ID }}
      #     credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
